//** This file was code generated by got. ***

package page

import (
	"bytes"
	"context"
	"fmt"
	"html"
	"strings"
)

// The DebugErrorPageTmpl writes a debug error page to the html output so that it will display the error in the
// browser, possibly as a popup. Do not use this on the release server, as it may expose details of your application
// that you do not want exposed.
func DebugErrorPageTmpl(ctx context.Context, partialHtml string, err *Error, buf *bytes.Buffer) {

	buf.WriteString(`<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>Error</title>
</head>
<body>
<h1>Error</h1>
`)
	items := strings.Split(err.Error(), "\n")
	errTitle := items[0]
	var errDesc string
	if len(items) > 1 {
		errDesc = strings.Join(items[1:], "<br />")
	}

	buf.WriteString(`<h2>`)

	buf.WriteString(errTitle)

	buf.WriteString(`</h2>
`)
	if errDesc != "" {
		buf.WriteString(`<p>`)

		buf.WriteString(errDesc)

		buf.WriteString(`</p>`)
	}

	buf.WriteString(`<h3>Call Path</h3>
<p>
`)
	for _, stack := range err.Stack {
		buf.WriteString(`    `)

		buf.WriteString(fmt.Sprintf("%s line %d in %s", stack.File, stack.Line, stack.Func))

		buf.WriteString(` <br />
`)
	}

	buf.WriteString(`</p>
<h3>Generated Html</h3>
`)

	buf.WriteString(strings.Replace(html.EscapeString(partialHtml), "\n", "<br>\n", -1))

	buf.WriteString(`

</body>
</html>

`)

	return
}
