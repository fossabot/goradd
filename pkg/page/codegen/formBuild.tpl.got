package template

// This template generates a got template for the build.go file in the forms directory

import (
	"github.com/spekary/goradd/tools/codegen/generator"
	"goradd-project/config"
	"bytes"
	"github.com/spekary/goradd/pkg/orm/db"
    "strings"
)

func init() {
	t := FormBuildTemplate {
		generator.Template {
			Overwrite: false,
			TargetDir: config.ProjectDir() + "/form/template_source",
		},
	}
	generator.AddOneTimeTemplate(&t)

    t2 := FormIndexTemplate {
        generator.Template {
            Overwrite: true,
            TargetDir: config.ProjectDir() + "/form",
        },
    }
    generator.AddOneTimeTemplate(&t2)
}

type FormBuildTemplate struct {
	generator.Template
}

func (n *FormBuildTemplate) FileName(key string) string {
	return n.TargetDir + "/build.go"    // This ignores the key, so will overwrite itself for each database. Not a big deal.
}

func (n *FormBuildTemplate) GenerateOnce(codegen generator.Codegen, dd *db.DatabaseDescription, buf *bytes.Buffer) {
	{{: "form/build.tmpl" }}
}

func (n *FormBuildTemplate) Overwrite() bool {
	return n.Template.Overwrite
}

type FormIndexTemplate struct {
	generator.Template
}

func (n *FormIndexTemplate) FileName(key string) string {
	return n.TargetDir + "/index.html"    // This ignores the key, so will overwrite itself for each database. Not a big deal.
}

func (n *FormIndexTemplate) GenerateOnce(codegen generator.Codegen, dd *db.DatabaseDescription, buf *bytes.Buffer) {
	{{: "form/index.tmpl" }}
}

func (n *FormIndexTemplate) Overwrite() bool {
	return n.Template.Overwrite
}

// TODO: Build out the index.html file
