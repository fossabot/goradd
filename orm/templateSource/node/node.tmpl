// The master template for the nodes for a particular column.

// ToDo: Move the node creation routines to the database driver, so that nodes can generate their own database code.

var privateName string

privateName = strings.ToLower(t.GoName[:1]) + t.GoName[1:]
{{
package node

// This file is code generated. Do not edit.

import (
	"github.com/spekary/goradd/orm/query"
)
}}

{{
type {{privateName}}Node struct {
	query.NodeI
}

func {{= t.GoName }}() *{{privateName}}Node {
	n := {{privateName}}Node {
		query.NewTableNode("{{= t.DbKey }}", "{{= t.DbName }}",  "{{= t.GoName }}"),
	}
	query.SetParentNode(&n, nil)
	return &n
}

}}

{{
func (n *{{privateName}}Node) SelectNodes_() (nodes []*query.ColumnNode) {
}}

for _,col := range t.Columns {

{{
	nodes = append(nodes, n.{{col.GoName}}())
}}

}

{{
	return nodes
}
}}

{{
func (n *{{privateName}}Node) PrimaryKeyNode_() (*query.ColumnNode) {
}}

for _,col := range t.Columns {
	if col.IsPk {
{{
	return n.{{col.GoName}}()
}}
		break
	}
}

{{
}
}}

{{
func (n *{{privateName}}Node) EmbeddedNode_() query.NodeI {
	return n.NodeI
}
}}


{{: column.tmpl }}
