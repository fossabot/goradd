package template

import (
	"github.com/spekary/goradd/codegen/generator"
	"github.com/spekary/goradd/codegen"
	"goradd/config"
	"bytes"
	"github.com/gedex/inflector"
	"github.com/knq/snaker"
	"github.com/spekary/goradd/orm/db"
)

func init() {
	t := TypeTableNodeTemplate {
		generator.Template {
			Overwrite: true,
			TargetDir: config.LocalDir + "/gen",
		},
	}
	generator.AddTypeTableTemplate(&t)
}

type TypeTableNodeTemplate struct {
	generator.Template
}

func (n *TypeTableNodeTemplate) FileName(key string, tt generator.TypeTableType) string {
	return n.TargetDir + "/" + key + "/model/node/" + tt.GoName + ".go"
}

func (n *TypeTableNodeTemplate) GenerateTypeTable(codegen generator.Codegen, dd *db.DatabaseDescription, tt generator.TypeTableType, buf *bytes.Buffer) {
	{{: "typeTables/typeTableNode.tmpl" }}
}

func (n *TypeTableNodeTemplate) Overwrite() bool {
	return n.Template.Overwrite
}
