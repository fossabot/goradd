//list.tmpl

// The master template for the ListPanel classes

var objectType = "List" // Eventually we might make it possible to generate multiple object types
var panelName = t.GoName + objectType + "Panel"
var lcPanelName = t.LcGoName + objectType + "Panel"

var editFormPath = path.Join("/goradd/form/",dd.DbKey,t.GoName + "Edit")

{{

package panel

// This implementation file is not modified during code generation. Changes to this file will be preserved.

import(
	"context"
	"github.com/goradd/goradd/pkg/page"
	"github.com/goradd/goradd/pkg/page/action"
	. "github.com/goradd/goradd/pkg/page/control"
	"github.com/goradd/goradd/pkg/page/event"
	"github.com/goradd/goradd/pkg/url"
	"goradd-project/gen/{{= dd.DbKey }}/model"
)

const (
	{{= lcPanelName }}RowClick = iota + 1000
	{{= lcPanelName }}NewClick
	{{= lcPanelName }}Search
)

type {{= panelName }} struct {
	{{= panelName }}Base
}

func New{{= panelName }}(ctx context.Context, parent page.ControlI, id string) *{{= panelName}} {
    p := new({{= panelName }})
	p.Init(ctx, p, parent, id)
	return p
}

func (p *{{= panelName }}) Init(ctx context.Context, self page.ControlI, parent page.ControlI, id string) {
	p.{{= panelName }}Base.Init(self, parent, id)
	p.createControls(ctx)
}

func (p *{{= panelName }}) Action(ctx context.Context, a page.ActionParams) {
	switch a.ID {
	case {{= lcPanelName }}Search:
		p.Refresh()
	case {{= lcPanelName }}RowClick: // edit
		p.EditItem(p.GetClickedRowValue(a))
	case {{= lcPanelName }}NewClick: // new
		p.EditItem("")
	}
}

// EditItem responds to an action to edit an item in the list. The id of the item will be given.
func (p *{{= panelName }}) EditItem(id string) {
    // This points to the default edit form path created by the templates. If you change the URL there, also change this.
    // Another option is to popup an edit dialog here.
	p.ParentForm().ChangeLocation(url.NewBuilder("{{= editFormPath }}").SetValue("id", id).String())
}

// BuildQuery begins the query builder process, returning a partially built query to be completed by the
// base object.
func (p *{{= panelName }}) BuildQuery(ctx context.Context) *model.{{= t.GoPlural }}Builder {
    // The default here simply filters based on the text in the FiterText.
    // Feel free to add additional requirements.
	filter := p.MakeFilter(GetTextbox(p, p.ID() + "-filterText").Text())
	return model.Query{{= t.GoPlural }}(ctx).Where(filter)
}

func Get{{= panelName }}(c page.ControlI, id string) *{{= panelName }} {
	return c.Page().GetControl(id).(*{{= panelName }})
}

func init() {
    page.RegisterControl({{= panelName }}{})
}

}}