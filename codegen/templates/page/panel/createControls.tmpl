// createControls.tmpl
{{
// CreateControls creates the controls in the edit panel and adds them to the panel.
func (p *{{= panelName }}) CreateControls(ctx context.Context) {
    p.AddControls(ctx,
{{for _,col := range t.Columns }}
{{if col.Generator != nil && !col.IsPk}}
        p.this().{{= col.ControlName }}Creator(),
{{if}}
{{for}}
    )
}

}}

/**

If you are going to replace the entire CreateControls function in the {{= t.GoName }}EditPanel file,
copy the code that follows instead, since it will call the functions directly rather than going
through the interface.

func (p *{{= panelName }}) CreateControls(ctx context.Context) {
    p.AddControls(ctx,
{{for _,col := range t.Columns }}
{{if col.Generator != nil && !col.IsPk}}
        p.{{= col.ControlName }}Creator(),
{{if}}
{{for}}
    )
}

**/

{{g


for _,col := range t.Columns {
    if col.Generator != nil && !col.IsPk {
        creatorString := col.Generator.GenerateCreator(&col)
        if creatorString != "" {
            creatorString = generator.WrapFormField(col.DefaultLabel, col.ControlID, creatorString)

{{
func (p *{{= panelName }}) {{= col.ControlName }}Creator() {{= generator.DefaultFormFieldCreator }} {
	return {{= creatorString }}
}

func (p *{{= panelName }}) Get{{= col.ControlName }}() *{{= col.Import.Alias }}.{{= col.ControlType }} {
	return p.Page().GetControl({{= col.ControlIDConst() }}).(*{{= col.Import.Alias }}.{{= col.ControlType }})
}

}}
        }
    }
}

}}

