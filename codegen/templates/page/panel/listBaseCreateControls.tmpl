// listBaseCreateControls.tmpl

{{

// createControls creates the controls in the panel.
// Override this to change what controls get created.
func (p *{{= panelName }}) createControls(ctx context.Context) {
	p.AddControls(ctx,
		{{= ctrlPkg }}.PanelCreator{
			ID: p.ID() + "-filterPanel",
			Children: {{= ctrlPkg }}.Children(
				{{= ctrlPkg }}.TextboxCreator{
					ID:          p.ID() + "-filterText",
					Placeholder: p.GT("Search..."),
					Type:        {{= ctrlPkg }}.TextboxTypeSearch,
					ControlOptions: page.ControlOptions{
						On: page.EventList{
							{event.Input().Delay(300), action.Ajax(p.ID(), {{= lcPanelName }}Search)},
							{event.EnterKey().Terminating(), action.Ajax(p.ID(), {{= lcPanelName }}Search)},
						},
					},
				},
			),
		},
        {{= ctrlPkg }}.PagedTableCreator{
            ID:  p.ID() + "-list",
            HeaderRowCount: 0,
            DataProviderID: p.ID(),
            RowStylerID: p.ID(),
            PageSize: {{= ctrlPkg }}.DefaultPagerPageSize,
            Caption: {{= ctrlPkg }}.DataPagerCreator{
                ID:            p.ID()+"-pager",
                PagedControl:  p.ID() + "-list",
            },
            OnCellClick: action.Ajax(p.ID(), {{= lcPanelName }}RowClick).ActionValue(javascript.JsCode(event.CellClickRowValue)),
            ControlOptions: page.ControlOptions{
                Class:          "gr-clickable-rows",
                WatchedDbTables: page.Nodes(node.{{= t.GoName }}()),
            },
            Columns:[]{{= ctrlPkg }}.ColumnCreator {
{{for _,col := range t.Columns }}
                column.NodeColumnCreator{
                    Node: node.{{= t.GoName }}().{{= col.GoName }}(),
                    Title: "{{= t.ControlDescription(col).DefaultLabel }}",
                {{if col.IsDateOnly}}
                    ColumnOptions: {{= ctrlPkg }}.ColumnOptions{TimeFormat: config.DefaultDateFormat},
                {{else if col.IsTimeOnly}}
                    ColumnOptions: {{= ctrlPkg }}.ColumnOptions{TimeFormat: config.DefaultTimeFormat},
                {{if}}
                },
{{for}}
           },
        },
		{{= ctrlPkg }}.PanelCreator {
			ID: p.ID()+"-buttonPanel",
			Children:{{= ctrlPkg }}.Children(
				{{= codegen.ObjectType(generator.DefaultButtonCreator) }} {
					ID: p.ID()+"-newButton",
					Text: p.GT("New"),
					OnClick:action.Ajax(p.ID(), {{= lcPanelName }}NewClick),
				},
			),
		},
	)
}

}}
