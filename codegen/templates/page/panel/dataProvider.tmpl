//dataProvider.tmpl

{{
func (p *{{= panelName }}) BindData(ctx context.Context, s goraddctrl.DataManagerI) {

    switch s.ID() {

{{g
for _,col := range t.Columns {
    cd := t.ControlDescription(col)
    if cd == nil {continue}
    if cd.Generator != nil {
        if _, ok := cd.Generator.(generator.ProviderGenerator); ok {
{{
    case "{{= cd.ControlID }}":
        var items []interface{}
{{if col.IsNullable}}
        items = control.NoSelectionItemList()
{{else}}
    {{if col.IsReference() && col.ForeignKey.IsType}}
        if int(p.{{= t.GoName }}.{{= col.ReferenceFunction(dd) }}()) == 0 {
    {{else}}
        if p.{{= t.GoName }}.{{= col.GoName }}() == {{= col.ColumnType.DefaultValue() }} {
    {{if}}
            items = control.SelectOneItemList()
        }
{{if}}
        items = append(items, s.DataConnector().(page.DataLoader).Load(ctx)...)
        s.SetData(items)
}}
        }
    }
}

for _,rr := range t.ReverseReferences {
    cd := t.ControlDescription(rr)
    if cd == nil || cd.Generator == nil {continue}
    if _, ok := cd.Generator.(generator.ProviderGenerator); ok {
{{
    case "{{= cd.ControlID }}":
        var items []interface{}
        items = append(items, s.DataConnector().(page.DataLoader).Load(ctx)...)
        s.SetData(items)
}}
    }
}


}}
    }
}

}}
