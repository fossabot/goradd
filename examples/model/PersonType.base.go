package model

// Code generated by goradd. DO NOT EDIT.

import (
	//"log"
	//"github.com/goradd/goradd/pkg/orm/query"
	"strconv"
)

const (
	PersonTypeContractor PersonType = 1

	PersonTypeManager PersonType = 2

	PersonTypeInactive PersonType = 3

	PersonTypeCompanyCar PersonType = 4

	PersonTypeWorksFromHome PersonType = 5

)

const PersonTypeMaxValue = 5

type PersonType uint

// String returns the name value of the type and satisfies the fmt.Stringer interface
func (p PersonType) String() string {
	switch p {
	case 0: return ""
	case 1: return "Contractor"
	case 2: return "Manager"
	case 3: return "Inactive"
	case 4: return "Company Car"
	case 5: return "Works From Home"
	default: panic("Index out of range")
	}
	return "" // prevent warning
}

// ID returns a string representation of the id and satisfies the IDer interface
func (p PersonType) ID() string {
	return strconv.Itoa(int(p))
}

func PersonTypes() (values []PersonType) {
    values = append(values, 1)
    values = append(values, 2)
    values = append(values, 3)
    values = append(values, 4)
    values = append(values, 5)
    return
}


func PersonTypeNames() []string {
	names := make([]string, 6)
	// 0 item will be a blank
	names[1] = "Contractor"
	names[2] = "Manager"
	names[3] = "Inactive"
	names[4] = "Company Car"
	names[5] = "Works From Home"
	return names
}

